name: Actualizar datos y deploy CMS diario

on:
  schedule:
    - cron: '0 6 * * *' # Todos los d√≠as a las 06:00 UTC (actualiza la hora si lo necesitas)
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

jobs:
  update-iso-news:
    name: üìä Actualizar datos ISO Chile
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: üì¶ Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
      - name: üöÄ Ejecutar scraper de noticias ISO
        run: |
          python scripts/iso_news_scraper_real.py
          python scripts/iso_news_scraper_enhanced.py
          python scripts/iso_news_scraper_newsapi.py
      - name: üìù Commit y push si hay cambios
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add src/data/*.json || true
          git commit -m 'chore: auto-update ISO news data' || echo 'No changes to commit'
          git push || echo 'No changes to push'

  build-and-deploy:
    name: üöÄ Build y Deploy CMS
    needs: update-iso-news
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: .
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
