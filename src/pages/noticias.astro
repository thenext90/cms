---
import Layout from '../layouts/Layout.astro';
import { Calendar, ArrowLeft } from 'lucide-astro';
import cms2Data from '../data/cms2.json';

// Funci√≥n para formatear fecha del campo fecha del JSON
function formatearFecha(fechaTexto) {
  try {
    // El formato viene como "Julio 02, 2025" o "Mayo 07, 2025"
    const partes = fechaTexto.split(' ');
    if (partes.length >= 3) {
      const mes = partes[0];
      const ano = partes[2].replace(',', '');
      return `${mes} ${ano}`;
    }
    return fechaTexto;
  } catch (error) {
    return fechaTexto;
  }
}

// Funci√≥n para inferir categor√≠a del texto
function inferirCategoria(texto) {
  const textoLower = texto.toLowerCase();
  
  // Verificar primero si contiene certificaci√≥n
  if (textoLower.includes('certificaci√≥n') || textoLower.includes('certificacion')) {
    return 'Noticias Clientes';
  }
  if (textoLower.includes('capacitaci√≥n') || textoLower.includes('capacitacion')) {
    return 'Capacitaci√≥n';
  }
  if (textoLower.includes('haccp') || textoLower.includes('iso 22000')) {
    return 'Seguridad Alimentaria';
  }
  if (textoLower.includes('iso 27001') || textoLower.includes('ciberseguridad')) {
    return 'Seguridad IT';
  }
  if (textoLower.includes('iso 45001') || textoLower.includes('seguridad')) {
    return 'Seguridad Laboral';
  }
  if (textoLower.includes('iso 14001') || textoLower.includes('ambiental')) {
    return 'Gesti√≥n Ambiental';
  }
  if (textoLower.includes('auditoria')) {
    return 'Auditor√≠a';
  }
  
  // Categor√≠a por defecto actualizada
  return 'Noticias Clientes';
}

// Funci√≥n para extraer solo el a√±o de una fecha
function extraerAno(fechaTexto) {
  const match = fechaTexto.match(/(\d{4})/);
  return match ? parseInt(match[1]) : new Date().getFullYear();
}

// Funci√≥n para agrupar noticias por a√±o usando el campo fecha del JSON
function agruparPorAno(noticias) {
  const grupos = {};
  
  noticias.forEach(noticia => {
    const fechaFormateada = formatearFecha(noticia.fecha);
    const ano = extraerAno(fechaFormateada);
    
    if (!grupos[ano]) {
      grupos[ano] = [];
    }
    grupos[ano].push(noticia);
  });
  
  // Ordenar a√±os de mayor a menor (m√°s reciente primero: 2025 ‚Üí 2024 ‚Üí 2023...)
  const anosOrdenados = Object.keys(grupos).sort((a, b) => parseInt(b) - parseInt(a));
  
  return anosOrdenados.map(ano => ({
    ano: parseInt(ano),
    noticias: grupos[ano].sort((a, b) => {
      // Dentro de cada a√±o, ordenar por mes (m√°s reciente primero)
      const fechaA = formatearFecha(a.fecha);
      const fechaB = formatearFecha(b.fecha);
      const mesesMap = {
        'enero': 1, 'febrero': 2, 'marzo': 3, 'abril': 4, 'mayo': 5, 'junio': 6,
        'julio': 7, 'agosto': 8, 'septiembre': 9, 'octubre': 10, 'noviembre': 11, 'diciembre': 12
      };
      
      const mesA = mesesMap[fechaA.split(' ')[0].toLowerCase()] || 12;
      const mesB = mesesMap[fechaB.split(' ')[0].toLowerCase()] || 12;
      
      // Para el mismo a√±o, ordenar por mes descendente (diciembre primero, enero √∫ltimo)
      return mesB - mesA;
    })
  }));
}

function crearTitulo(texto) {
  let titulo = texto.replace(/\n/g, ' ').substring(0, 80);
  if (titulo.length === 80) {
    const ultimoEspacio = titulo.lastIndexOf(' ');
    if (ultimoEspacio > 50) {
      titulo = titulo.substring(0, ultimoEspacio) + '...';
    }
  }
  return titulo.charAt(0).toUpperCase() + titulo.slice(1);
}
---

<Layout title="Noticias - CMS Consultores">
  <main class="bg-gray-50">
    <!-- Hero Section -->
    <section class="bg-gradient-to-br from-accent-900 via-accent-800 to-accent-700 text-white py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <Calendar size="64" class="mx-auto mb-6 text-orange-200" />
          <h1 class="text-4xl md:text-5xl font-bold mb-4">Trayectoria con Nuestros Clientes</h1>
          <p class="text-xl text-orange-100 max-w-3xl mx-auto">
            D√©cadas de experiencia documentando el crecimiento y √©xito de nuestros clientes en sus procesos de certificaci√≥n y mejora continua
          </p>
        </div>
      </div>
    </section>

    <!-- Lista de Noticias -->
    <section class="py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="mb-8">
          <a href="/" class="inline-flex items-center space-x-2 text-accent-800 hover:text-accent-900 font-medium transition-colors">
            <ArrowLeft size="20" />
            <span>Volver al inicio</span>
          </a>
        </div>
        
        <!-- Debug: Mostrar total de noticias -->
        <div class="mb-6 p-4 bg-blue-100 rounded-lg">
          <p class="text-blue-800 font-semibold">
            üìä Mostrando {cms2Data.noticias.filter(noticia => noticia.texto && noticia.texto.trim() !== '').length} noticias en total
          </p>
        </div>

        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {(() => {
            const noticiasCompletas = cms2Data.noticias
              .filter(noticia => noticia.texto && noticia.texto.trim() !== '');
            
            console.log(`Total de noticias procesadas: ${noticiasCompletas.length}`);
            
            return agruparPorAno(noticiasCompletas);
          })().map(grupo => (
            <div class="md:col-span-2 lg:col-span-3 mb-12">
              <!-- T√≠tulo del a√±o -->
              <div class="border-b-2 border-accent-200 pb-4 mb-8">
                <h2 class="text-3xl font-bold text-accent-800">{grupo.ano}</h2>
                <p class="text-gray-600 mt-2">{grupo.noticias.length} {grupo.noticias.length === 1 ? 'proyecto' : 'proyectos'} realizados</p>
              </div>
              
              <!-- Grid de noticias para este a√±o -->
              <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                {grupo.noticias.map((noticia, index) => (
                  <article class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden">
                    <div class="relative">
                      <img 
                        src={noticia.imagen} 
                        alt={crearTitulo(noticia.texto)}
                        class="w-full h-48 object-cover"
                      />
                      <div class="absolute top-4 left-4">
                        <span class="bg-gradient-to-r from-accent-600 to-accent-800 text-white text-xs font-semibold px-3 py-2 rounded-full">
                          {inferirCategoria(noticia.texto)}
                        </span>
                      </div>
                    </div>
                    
                    <div class="p-6">
                      <div class="flex items-center space-x-2 text-sm text-gray-500 mb-3">
                        <Calendar size="16" />
                        <time>{formatearFecha(noticia.fecha)}</time>
                      </div>
                      
                      <h3 class="text-xl font-bold text-gray-800 mb-3 leading-tight">
                        {crearTitulo(noticia.texto)}
                      </h3>
                      
                      <p class="text-gray-600 text-sm leading-relaxed">
                        {noticia.texto.replace(/\n/g, ' ').substring(0, 150) + (noticia.texto.length > 150 ? '...' : '')}
                      </p>
                    </div>
                  </article>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  </main>
</Layout>
