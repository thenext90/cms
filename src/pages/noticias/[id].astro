---
import Layout from '../../layouts/Layout.astro';
import { Calendar, ArrowLeft, Share2 } from 'lucide-astro';
import noticiasData from '../../data/cms1.json';

export async function getStaticPaths() {
  return noticiasData
    .filter(noticia => noticia.text && noticia.text.trim() !== '')
    .map((noticia, index) => ({
      params: { id: (index + 1).toString() },
      props: { noticia, index }
    }));
}

const { noticia, index } = Astro.props;

// Función para extraer fecha del texto
function extraerFecha(texto) {
  // Lista de meses en español e inglés
  const mesesMap = {
    'enero': 'Enero', 'january': 'Enero',
    'febrero': 'Febrero', 'february': 'Febrero',
    'marzo': 'Marzo', 'march': 'Marzo',
    'abril': 'Abril', 'april': 'Abril',
    'mayo': 'Mayo', 'may': 'Mayo',
    'junio': 'Junio', 'june': 'Junio',
    'julio': 'Julio', 'july': 'Julio',
    'agosto': 'Agosto', 'august': 'Agosto',
    'septiembre': 'Septiembre', 'september': 'Septiembre',
    'octubre': 'Octubre', 'october': 'Octubre',
    'noviembre': 'Noviembre', 'november': 'Noviembre',
    'diciembre': 'Diciembre', 'december': 'Diciembre',
    'dic': 'Diciembre', 'dec': 'Diciembre',
    'sept': 'Septiembre', 'sep': 'Septiembre'
  };

  const textoLower = texto.toLowerCase();
  
  // Buscar mes específico en el texto
  for (const [mesKey, mesNombre] of Object.entries(mesesMap)) {
    if (textoLower.includes(mesKey)) {
      // Buscar también el año si está presente
      const regex = new RegExp(`${mesKey}\\s*(\\d{4})`, 'i');
      const match = textoLower.match(regex);
      if (match && match[1]) {
        return `${mesNombre} ${match[1]}`;
      }
      
      // Si no encuentra año específico, usar año por defecto basado en el contexto
      // Determinar año basado en otros patrones
      if (textoLower.includes('2025')) return `${mesNombre} 2025`;
      if (textoLower.includes('2024')) return `${mesNombre} 2024`;
      if (textoLower.includes('2023')) return `${mesNombre} 2023`;
      if (textoLower.includes('2022')) return `${mesNombre} 2022`;
      
      // Por defecto, usar año actual para meses encontrados
      return `${mesNombre} 2024`;
    }
  }
  
  // Buscar patrones de año específicos para asignar fechas contextuales
  if (textoLower.includes('2025')) {
    return 'Enero 2025'; // Proyectos futuros se asignan a Enero
  }
  if (textoLower.includes('2024')) {
    return 'Diciembre 2024'; // Proyectos de 2024 se asignan a Diciembre
  }
  if (textoLower.includes('2023')) {
    return 'Diciembre 2023';
  }
  if (textoLower.includes('2022')) {
    return 'Diciembre 2022';
  }
  
  // Buscar patrones de rango de años como "2024-2025"
  const rangoPattern = /(\d{4})-(\d{4})/;
  const rangoMatch = texto.match(rangoPattern);
  if (rangoMatch) {
    return `Enero ${rangoMatch[2]}`; // Usar el segundo año del rango
  }
  
  // Para noticias específicas conocidas
  if (textoLower.includes('econativa')) {
    return 'Julio 2025'; // Fecha específica para Econativa
  }
  
  // Para noticias sin fecha específica, asignar fecha basada en contexto de contenido
  if (textoLower.includes('certificación') || textoLower.includes('certificacion')) {
    return 'Noviembre 2024'; // Certificaciones recientes
  }
  if (textoLower.includes('capacitación') || textoLower.includes('capacitacion')) {
    return 'Octubre 2024'; // Capacitaciones recientes
  }
  if (textoLower.includes('iso') && textoLower.includes('proceso')) {
    return 'Septiembre 2024'; // Procesos ISO en curso
  }
  
  // Si no encuentra nada específico, usar fecha actual
  const ahora = new Date();
  const meses = [
    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
  ];
  return `${meses[ahora.getMonth()]} ${ahora.getFullYear()}`;
}

// Función para inferir categoría del texto
function inferirCategoria(texto) {
  const textoLower = texto.toLowerCase();
  
  // Verificar primero si contiene certificación
  if (textoLower.includes('certificación') || textoLower.includes('certificacion')) {
    return 'Actualizaciones y mejoras para quienes confían en nosotros';
  }
  if (textoLower.includes('capacitación') || textoLower.includes('capacitacion')) {
    return 'Capacitación';
  }
  if (textoLower.includes('haccp') || textoLower.includes('iso 22000')) {
    return 'Seguridad Alimentaria';
  }
  if (textoLower.includes('iso 27001') || textoLower.includes('ciberseguridad')) {
    return 'Seguridad IT';
  }
  if (textoLower.includes('iso 45001') || textoLower.includes('seguridad')) {
    return 'Seguridad Laboral';
  }
  if (textoLower.includes('iso 14001') || textoLower.includes('ambiental')) {
    return 'Gestión Ambiental';
  }
  if (textoLower.includes('auditoria')) {
    return 'Auditoría';
  }
  
  return 'Actualizaciones y mejoras para quienes confían en nosotros';
}

function crearTitulo(texto) {
  let titulo = texto.replace(/\n/g, ' ').substring(0, 80);
  if (titulo.length === 80) {
    const ultimoEspacio = titulo.lastIndexOf(' ');
    if (ultimoEspacio > 50) {
      titulo = titulo.substring(0, ultimoEspacio) + '...';
    }
  }
  return titulo.charAt(0).toUpperCase() + titulo.slice(1);
}
---

<Layout title={`${crearTitulo(noticia.text)} - CMS Consultores`}>
  <main class="bg-gray-50">
    <!-- Hero Section -->
    <section class="bg-gradient-to-br from-accent-900 via-accent-800 to-accent-700 text-white py-16">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="mb-6">
          <a href="/noticias" class="inline-flex items-center space-x-2 text-orange-200 hover:text-white font-medium transition-colors">
            <ArrowLeft size="20" />
            <span>Volver a noticias</span>
          </a>
        </div>
        
        <div class="flex items-center space-x-2 text-orange-200 mb-4">
          <Calendar size="16" />
          <time>{extraerFecha(noticia.text)}</time>
          <span>•</span>
          <span class="bg-white/20 px-3 py-1 rounded-full text-sm font-medium">{inferirCategoria(noticia.text)}</span>
        </div>
        
        <h1 class="text-3xl md:text-4xl font-bold mb-6 leading-tight">
          {crearTitulo(noticia.text)}
        </h1>
      </div>
    </section>

    <!-- Contenido de la Noticia -->
    <section class="py-16">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <article class="bg-white rounded-xl shadow-lg overflow-hidden">
          <div class="relative">
            <img 
              src={noticia.image_url} 
              alt={crearTitulo(noticia.text)}
              class="w-full h-64 md:h-80 object-cover"
            />
          </div>
          
          <div class="p-8">
            <div class="prose prose-lg max-w-none">
              <p class="text-gray-700 leading-relaxed text-lg whitespace-pre-line">
                {noticia.text}
              </p>
            </div>
            
            <!-- Acciones -->
            <div class="mt-8 pt-8 border-t border-gray-200 flex items-center justify-between">
              <div class="flex items-center space-x-4">
                <span class="text-sm text-gray-500">Compartir:</span>
                <button class="inline-flex items-center space-x-2 text-accent-800 hover:text-accent-900 transition-colors">
                  <Share2 size="16" />
                  <span class="text-sm">Compartir noticia</span>
                </button>
              </div>
              
              <a 
                href="/noticias" 
                class="inline-flex items-center space-x-2 bg-accent-800 hover:bg-accent-900 text-white px-6 py-3 rounded-lg transition-colors font-medium"
              >
                <span>Ver más noticias</span>
              </a>
            </div>
          </div>
        </article>
      </div>
    </section>
  </main>
</Layout>
